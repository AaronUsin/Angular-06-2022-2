/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { BsDatepickerConfig } from './bs-datepicker.config';
import * as ɵngcc0 from '@angular/core';
var BsDaterangepickerConfig = /** @class */ (function (_super) {
    tslib_1.__extends(BsDaterangepickerConfig, _super);
    function BsDaterangepickerConfig() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // DatepickerRenderOptions
        _this.displayMonths = 2;
        /**
         * turn on/off animation
         */
        _this.isAnimated = false;
        return _this;
    }
BsDaterangepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: BsDaterangepickerConfig, factory: function BsDaterangepickerConfig_Factory(t) { return ɵBsDaterangepickerConfig_BaseFactory(t || BsDaterangepickerConfig); }, providedIn: null });
const ɵBsDaterangepickerConfig_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(BsDaterangepickerConfig);
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BsDaterangepickerConfig, [{
        type: Injectable
    }], null, null);
    return BsDaterangepickerConfig;
}(BsDatepickerConfig));
export { BsDaterangepickerConfig };
if (false) {
    /** @type {?} */
    BsDaterangepickerConfig.prototype.displayMonths;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDaterangepickerConfig.prototype.isAnimated;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL2Fhcm9uL09uZURyaXZlL0Rlc2t0b3AvQW5ndWxhci0wNi0yMDIyLTIvTm9ydGFsaSBwcm9vdml0w7bDti9hbmd1bGFyLWJha2VyeXNob3Avbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvZGF0ZXBpY2tlci9lc201L2JzLWRhdGVyYW5nZXBpY2tlci5jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7O0FBT0E7Ozs7Ozs7Ozs7O0tBV0s7Ozs7O29CQUdDIiwiZmlsZSI6ImJzLWRhdGVyYW5nZXBpY2tlci5jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0ICogYXMgdHNsaWJfMSBmcm9tIFwidHNsaWJcIjtcbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4vYnMtZGF0ZXBpY2tlci5jb25maWcnO1xudmFyIEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKF9zdXBlcikge1xuICAgIHRzbGliXzEuX19leHRlbmRzKEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSBfc3VwZXIgIT09IG51bGwgJiYgX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfHwgdGhpcztcbiAgICAgICAgLy8gRGF0ZXBpY2tlclJlbmRlck9wdGlvbnNcbiAgICAgICAgX3RoaXMuZGlzcGxheU1vbnRocyA9IDI7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiB0dXJuIG9uL29mZiBhbmltYXRpb25cbiAgICAgICAgICovXG4gICAgICAgIF90aGlzLmlzQW5pbWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgIH1cbiAgICBCc0RhdGVyYW5nZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUgfVxuICAgIF07XG4gICAgcmV0dXJuIEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnO1xufShCc0RhdGVwaWNrZXJDb25maWcpKTtcbmV4cG9ydCB7IEJzRGF0ZXJhbmdlcGlja2VyQ29uZmlnIH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcmFuZ2VwaWNrZXJDb25maWcucHJvdG90eXBlLmRpc3BsYXlNb250aHM7XG4gICAgLyoqXG4gICAgICogdHVybiBvbi9vZmYgYW5pbWF0aW9uXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcmFuZ2VwaWNrZXJDb25maWcucHJvdG90eXBlLmlzQW5pbWF0ZWQ7XG59XG4iXX0=