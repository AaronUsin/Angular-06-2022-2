/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
/**
 * For date range picker there are `BsDaterangepickerConfig` which inherits all properties,
 * except `displayMonths`, for range picker it default to `2`
 */
import * as ɵngcc0 from '@angular/core';
export class BsDatepickerConfig {
    constructor() {
        /**
         * sets use adaptive position
         */
        this.adaptivePosition = false;
        /**
         * turn on/off animation
         */
        this.isAnimated = false;
        /**
         * CSS class which will be applied to datepicker container,
         * usually used to set color theme
         */
        this.containerClass = 'theme-green';
        // DatepickerRenderOptions
        this.displayMonths = 1;
        /**
         * Allows to hide week numbers in datepicker
         */
        this.showWeekNumbers = true;
        this.dateInputFormat = 'L';
        // range picker
        this.rangeSeparator = ' - ';
        /**
         * Date format for date range input field
         */
        this.rangeInputFormat = 'L';
        // DatepickerFormatOptions
        this.monthTitle = 'MMMM';
        this.yearTitle = 'YYYY';
        this.dayLabel = 'D';
        this.monthLabel = 'MMMM';
        this.yearLabel = 'YYYY';
        this.weekNumbers = 'w';
    }
}
BsDatepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: BsDatepickerConfig, factory: function BsDatepickerConfig_Factory(t) { return new (t || BsDatepickerConfig)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BsDatepickerConfig, [{
        type: Injectable
    }], function () { return []; }, { constructor: [], adaptivePosition: [], isAnimated: [], containerClass: [], displayMonths: [], showWeekNumbers: [], dateInputFormat: [], rangeSeparator: [], rangeInputFormat: [], monthTitle: [], yearTitle: [], dayLabel: [], monthLabel: [], yearLabel: [], weekNumbers: [] });
if (false) {
    /**
     * sets use adaptive position
     * @type {?}
     */
    BsDatepickerConfig.prototype.adaptivePosition;
    /**
     * turn on/off animation
     * @type {?}
     */
    BsDatepickerConfig.prototype.isAnimated;
    /** @type {?} */
    BsDatepickerConfig.prototype.value;
    /** @type {?} */
    BsDatepickerConfig.prototype.isDisabled;
    /**
     * Default min date for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.minDate;
    /**
     * Default max date for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.maxDate;
    /**
     * Default date custom classes for all date/range pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.dateCustomClasses;
    /** @type {?} */
    BsDatepickerConfig.prototype.daysDisabled;
    /**
     * Disable specific dates
     * @type {?}
     */
    BsDatepickerConfig.prototype.datesDisabled;
    /**
     * Makes dates from other months active
     * @type {?}
     */
    BsDatepickerConfig.prototype.selectFromOtherMonth;
    /**
     * Makes dates from other months active
     * @type {?}
     */
    BsDatepickerConfig.prototype.selectWeek;
    /**
     * Add class to current day
     * @type {?}
     */
    BsDatepickerConfig.prototype.customTodayClass;
    /**
     * Default mode for all date pickers
     * @type {?}
     */
    BsDatepickerConfig.prototype.minMode;
    /**
     * CSS class which will be applied to datepicker container,
     * usually used to set color theme
     * @type {?}
     */
    BsDatepickerConfig.prototype.containerClass;
    /** @type {?} */
    BsDatepickerConfig.prototype.displayMonths;
    /**
     * Allows to hide week numbers in datepicker
     * @type {?}
     */
    BsDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    BsDatepickerConfig.prototype.dateInputFormat;
    /** @type {?} */
    BsDatepickerConfig.prototype.rangeSeparator;
    /**
     * Date format for date range input field
     * @type {?}
     */
    BsDatepickerConfig.prototype.rangeInputFormat;
    /** @type {?} */
    BsDatepickerConfig.prototype.monthTitle;
    /** @type {?} */
    BsDatepickerConfig.prototype.yearTitle;
    /** @type {?} */
    BsDatepickerConfig.prototype.dayLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.monthLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.yearLabel;
    /** @type {?} */
    BsDatepickerConfig.prototype.weekNumbers;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL2Fhcm9uL09uZURyaXZlL0Rlc2t0b3AvQW5ndWxhci0wNi0yMDIyLTIvTm9ydGFsaSBwcm9vdml0w7bDti9hbmd1bGFyLWJha2VyeXNob3Avbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvZGF0ZXBpY2tlci9lc20yMDE1L2JzLWRhdGVwaWNrZXIuY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FvQ0Msc1RBR0MiLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBGb3IgZGF0ZSByYW5nZSBwaWNrZXIgdGhlcmUgYXJlIGBCc0RhdGVyYW5nZXBpY2tlckNvbmZpZ2Agd2hpY2ggaW5oZXJpdHMgYWxsIHByb3BlcnRpZXMsXG4gKiBleGNlcHQgYGRpc3BsYXlNb250aHNgLCBmb3IgcmFuZ2UgcGlja2VyIGl0IGRlZmF1bHQgdG8gYDJgXG4gKi9cbmV4cG9ydCBjbGFzcyBCc0RhdGVwaWNrZXJDb25maWcge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICAvKipcbiAgICAgICAgICogc2V0cyB1c2UgYWRhcHRpdmUgcG9zaXRpb25cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuYWRhcHRpdmVQb3NpdGlvbiA9IGZhbHNlO1xuICAgICAgICAvKipcbiAgICAgICAgICogdHVybiBvbi9vZmYgYW5pbWF0aW9uXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmlzQW5pbWF0ZWQgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIENTUyBjbGFzcyB3aGljaCB3aWxsIGJlIGFwcGxpZWQgdG8gZGF0ZXBpY2tlciBjb250YWluZXIsXG4gICAgICAgICAqIHVzdWFsbHkgdXNlZCB0byBzZXQgY29sb3IgdGhlbWVcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuY29udGFpbmVyQ2xhc3MgPSAndGhlbWUtZ3JlZW4nO1xuICAgICAgICAvLyBEYXRlcGlja2VyUmVuZGVyT3B0aW9uc1xuICAgICAgICB0aGlzLmRpc3BsYXlNb250aHMgPSAxO1xuICAgICAgICAvKipcbiAgICAgICAgICogQWxsb3dzIHRvIGhpZGUgd2VlayBudW1iZXJzIGluIGRhdGVwaWNrZXJcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuc2hvd1dlZWtOdW1iZXJzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5kYXRlSW5wdXRGb3JtYXQgPSAnTCc7XG4gICAgICAgIC8vIHJhbmdlIHBpY2tlclxuICAgICAgICB0aGlzLnJhbmdlU2VwYXJhdG9yID0gJyAtICc7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEYXRlIGZvcm1hdCBmb3IgZGF0ZSByYW5nZSBpbnB1dCBmaWVsZFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5yYW5nZUlucHV0Rm9ybWF0ID0gJ0wnO1xuICAgICAgICAvLyBEYXRlcGlja2VyRm9ybWF0T3B0aW9uc1xuICAgICAgICB0aGlzLm1vbnRoVGl0bGUgPSAnTU1NTSc7XG4gICAgICAgIHRoaXMueWVhclRpdGxlID0gJ1lZWVknO1xuICAgICAgICB0aGlzLmRheUxhYmVsID0gJ0QnO1xuICAgICAgICB0aGlzLm1vbnRoTGFiZWwgPSAnTU1NTSc7XG4gICAgICAgIHRoaXMueWVhckxhYmVsID0gJ1lZWVknO1xuICAgICAgICB0aGlzLndlZWtOdW1iZXJzID0gJ3cnO1xuICAgIH1cbn1cbkJzRGF0ZXBpY2tlckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogSW5qZWN0YWJsZSB9XG5dO1xuaWYgKGZhbHNlKSB7XG4gICAgLyoqXG4gICAgICogc2V0cyB1c2UgYWRhcHRpdmUgcG9zaXRpb25cbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmFkYXB0aXZlUG9zaXRpb247XG4gICAgLyoqXG4gICAgICogdHVybiBvbi9vZmYgYW5pbWF0aW9uXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5pc0FuaW1hdGVkO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnZhbHVlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmlzRGlzYWJsZWQ7XG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBtaW4gZGF0ZSBmb3IgYWxsIGRhdGUvcmFuZ2UgcGlja2Vyc1xuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWluRGF0ZTtcbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IG1heCBkYXRlIGZvciBhbGwgZGF0ZS9yYW5nZSBwaWNrZXJzXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tYXhEYXRlO1xuICAgIC8qKlxuICAgICAqIERlZmF1bHQgZGF0ZSBjdXN0b20gY2xhc3NlcyBmb3IgYWxsIGRhdGUvcmFuZ2UgcGlja2Vyc1xuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF0ZUN1c3RvbUNsYXNzZXM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF5c0Rpc2FibGVkO1xuICAgIC8qKlxuICAgICAqIERpc2FibGUgc3BlY2lmaWMgZGF0ZXNcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRhdGVzRGlzYWJsZWQ7XG4gICAgLyoqXG4gICAgICogTWFrZXMgZGF0ZXMgZnJvbSBvdGhlciBtb250aHMgYWN0aXZlXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zZWxlY3RGcm9tT3RoZXJNb250aDtcbiAgICAvKipcbiAgICAgKiBNYWtlcyBkYXRlcyBmcm9tIG90aGVyIG1vbnRocyBhY3RpdmVcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnNlbGVjdFdlZWs7XG4gICAgLyoqXG4gICAgICogQWRkIGNsYXNzIHRvIGN1cnJlbnQgZGF5XG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5jdXN0b21Ub2RheUNsYXNzO1xuICAgIC8qKlxuICAgICAqIERlZmF1bHQgbW9kZSBmb3IgYWxsIGRhdGUgcGlja2Vyc1xuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWluTW9kZTtcbiAgICAvKipcbiAgICAgKiBDU1MgY2xhc3Mgd2hpY2ggd2lsbCBiZSBhcHBsaWVkIHRvIGRhdGVwaWNrZXIgY29udGFpbmVyLFxuICAgICAqIHVzdWFsbHkgdXNlZCB0byBzZXQgY29sb3IgdGhlbWVcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmNvbnRhaW5lckNsYXNzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLmRpc3BsYXlNb250aHM7XG4gICAgLyoqXG4gICAgICogQWxsb3dzIHRvIGhpZGUgd2VlayBudW1iZXJzIGluIGRhdGVwaWNrZXJcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnNob3dXZWVrTnVtYmVycztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kYXRlSW5wdXRGb3JtYXQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUucmFuZ2VTZXBhcmF0b3I7XG4gICAgLyoqXG4gICAgICogRGF0ZSBmb3JtYXQgZm9yIGRhdGUgcmFuZ2UgaW5wdXQgZmllbGRcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0RhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnJhbmdlSW5wdXRGb3JtYXQ7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubW9udGhUaXRsZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS55ZWFyVGl0bGU7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF5TGFiZWw7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubW9udGhMYWJlbDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS55ZWFyTGFiZWw7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUud2Vla051bWJlcnM7XG59XG4iXX0=