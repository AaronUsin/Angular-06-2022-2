/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { EventEmitter, Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var BsDropdownState = /** @class */ (function () {
    function BsDropdownState() {
        var _this = this;
        this.direction = 'down';
        this.isOpenChange = new EventEmitter();
        this.isDisabledChange = new EventEmitter();
        this.toggleClick = new EventEmitter();
        this.dropdownMenu = new Promise((/**
         * @param {?} resolve
         * @return {?}
         */
        function (resolve) {
            _this.resolveDropdownMenu = resolve;
        }));
    }
    /** @nocollapse */
    BsDropdownState.ctorParameters = function () { return []; };
BsDropdownState.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: BsDropdownState, factory: function BsDropdownState_Factory(t) { return new (t || BsDropdownState)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(BsDropdownState, [{
        type: Injectable
    }], function () { return []; }, { direction: [], isOpenChange: [], isDisabledChange: [], toggleClick: [], dropdownMenu: [] });
    return BsDropdownState;
}());
export { BsDropdownState };
if (false) {
    /** @type {?} */
    BsDropdownState.prototype.direction;
    /** @type {?} */
    BsDropdownState.prototype.autoClose;
    /** @type {?} */
    BsDropdownState.prototype.insideClick;
    /** @type {?} */
    BsDropdownState.prototype.isOpenChange;
    /** @type {?} */
    BsDropdownState.prototype.isDisabledChange;
    /** @type {?} */
    BsDropdownState.prototype.toggleClick;
    /**
     * Content to be displayed as popover.
     * @type {?}
     */
    BsDropdownState.prototype.dropdownMenu;
    /** @type {?} */
    BsDropdownState.prototype.resolveDropdownMenu;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL2Fhcm9uL09uZURyaXZlL0Rlc2t0b3AvQW5ndWxhci0wNi0yMDIyLTIvTm9ydGFsaSBwcm9vdml0w7bDti9hbmd1bGFyLWJha2VyeXNob3Avbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvZHJvcGRvd24vZXNtNS9icy1kcm9wZG93bi5zdGF0ZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7O0FBS0E7Ozs7Ozs7Ozs7Ozs7O0tBY0ssQUFHQzs7Ozs7O2tJQUUwRCIsImZpbGUiOiJicy1kcm9wZG93bi5zdGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIsIEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBCc0Ryb3Bkb3duU3RhdGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gQnNEcm9wZG93blN0YXRlKCkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLmRpcmVjdGlvbiA9ICdkb3duJztcbiAgICAgICAgdGhpcy5pc09wZW5DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgICAgIHRoaXMuaXNEaXNhYmxlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy50b2dnbGVDbGljayA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgICAgICAgdGhpcy5kcm9wZG93bk1lbnUgPSBuZXcgUHJvbWlzZSgoLyoqXG4gICAgICAgICAqIEBwYXJhbSB7P30gcmVzb2x2ZVxuICAgICAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAgICAgKi9cbiAgICAgICAgZnVuY3Rpb24gKHJlc29sdmUpIHtcbiAgICAgICAgICAgIF90aGlzLnJlc29sdmVEcm9wZG93bk1lbnUgPSByZXNvbHZlO1xuICAgICAgICB9KSk7XG4gICAgfVxuICAgIEJzRHJvcGRvd25TdGF0ZS5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUgfVxuICAgIF07XG4gICAgLyoqIEBub2NvbGxhcHNlICovXG4gICAgQnNEcm9wZG93blN0YXRlLmN0b3JQYXJhbWV0ZXJzID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gW107IH07XG4gICAgcmV0dXJuIEJzRHJvcGRvd25TdGF0ZTtcbn0oKSk7XG5leHBvcnQgeyBCc0Ryb3Bkb3duU3RhdGUgfTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0Ryb3Bkb3duU3RhdGUucHJvdG90eXBlLmRpcmVjdGlvbjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEcm9wZG93blN0YXRlLnByb3RvdHlwZS5hdXRvQ2xvc2U7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRHJvcGRvd25TdGF0ZS5wcm90b3R5cGUuaW5zaWRlQ2xpY2s7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRHJvcGRvd25TdGF0ZS5wcm90b3R5cGUuaXNPcGVuQ2hhbmdlO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBCc0Ryb3Bkb3duU3RhdGUucHJvdG90eXBlLmlzRGlzYWJsZWRDaGFuZ2U7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIEJzRHJvcGRvd25TdGF0ZS5wcm90b3R5cGUudG9nZ2xlQ2xpY2s7XG4gICAgLyoqXG4gICAgICogQ29udGVudCB0byBiZSBkaXNwbGF5ZWQgYXMgcG9wb3Zlci5cbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBCc0Ryb3Bkb3duU3RhdGUucHJvdG90eXBlLmRyb3Bkb3duTWVudTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgQnNEcm9wZG93blN0YXRlLnByb3RvdHlwZS5yZXNvbHZlRHJvcGRvd25NZW51O1xufVxuIl19