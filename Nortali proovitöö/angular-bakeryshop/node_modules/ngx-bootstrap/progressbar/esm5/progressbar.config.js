/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var ProgressbarConfig = /** @class */ (function () {
    function ProgressbarConfig() {
        /**
         * if `true` changing value of progress bar will be animated
         */
        this.animate = false;
        /**
         * maximum total value of progress element
         */
        this.max = 100;
    }
ProgressbarConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: ProgressbarConfig, factory: function ProgressbarConfig_Factory(t) { return new (t || ProgressbarConfig)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(ProgressbarConfig, [{
        type: Injectable
    }], function () { return []; }, { animate: [], max: [] });
    return ProgressbarConfig;
}());
export { ProgressbarConfig };
if (false) {
    /**
     * if `true` changing value of progress bar will be animated
     * @type {?}
     */
    ProgressbarConfig.prototype.animate;
    /**
     * maximum total value of progress element
     * @type {?}
     */
    ProgressbarConfig.prototype.max;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL2Fhcm9uL09uZURyaXZlL0Rlc2t0b3AvQW5ndWxhci0wNi0yMDIyLTIvTm9ydGFsaSBwcm9vdml0w7bDti9hbmd1bGFyLWJha2VyeXNob3Avbm9kZV9tb2R1bGVzL25neC1ib290c3RyYXAvcHJvZ3Jlc3NiYXIvZXNtNS9wcm9ncmVzc2Jhci5jb25maWcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7O0tBVUs7Ozs7OERBR0MiLCJmaWxlIjoicHJvZ3Jlc3NiYXIuY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAZmlsZW92ZXJ2aWV3IGFkZGVkIGJ5IHRzaWNrbGVcbiAqIEBzdXBwcmVzcyB7Y2hlY2tUeXBlcyxleHRyYVJlcXVpcmUsbWlzc2luZ092ZXJyaWRlLG1pc3NpbmdSZXR1cm4sdW51c2VkUHJpdmF0ZU1lbWJlcnMsdXNlbGVzc0NvZGV9IGNoZWNrZWQgYnkgdHNjXG4gKi9cbmltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBQcm9ncmVzc2JhckNvbmZpZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBQcm9ncmVzc2JhckNvbmZpZygpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGlmIGB0cnVlYCBjaGFuZ2luZyB2YWx1ZSBvZiBwcm9ncmVzcyBiYXIgd2lsbCBiZSBhbmltYXRlZFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5hbmltYXRlID0gZmFsc2U7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBtYXhpbXVtIHRvdGFsIHZhbHVlIG9mIHByb2dyZXNzIGVsZW1lbnRcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMubWF4ID0gMTAwO1xuICAgIH1cbiAgICBQcm9ncmVzc2JhckNvbmZpZy5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUgfVxuICAgIF07XG4gICAgcmV0dXJuIFByb2dyZXNzYmFyQ29uZmlnO1xufSgpKTtcbmV4cG9ydCB7IFByb2dyZXNzYmFyQ29uZmlnIH07XG5pZiAoZmFsc2UpIHtcbiAgICAvKipcbiAgICAgKiBpZiBgdHJ1ZWAgY2hhbmdpbmcgdmFsdWUgb2YgcHJvZ3Jlc3MgYmFyIHdpbGwgYmUgYW5pbWF0ZWRcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBQcm9ncmVzc2JhckNvbmZpZy5wcm90b3R5cGUuYW5pbWF0ZTtcbiAgICAvKipcbiAgICAgKiBtYXhpbXVtIHRvdGFsIHZhbHVlIG9mIHByb2dyZXNzIGVsZW1lbnRcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBQcm9ncmVzc2JhckNvbmZpZy5wcm90b3R5cGUubWF4O1xufVxuIl19