/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { DatePickerInnerComponent } from './datepicker-inner.component';
import { DatepickerConfig } from './datepicker.config';
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './datepicker-inner.component';
import * as ɵngcc2 from './daypicker.component';
import * as ɵngcc3 from './monthpicker.component';
import * as ɵngcc4 from './yearpicker.component';

const _c0 = [3, "activeDate", "locale", "datepickerMode", "initDate", "minDate", "maxDate", "minMode", "maxMode", "showWeeks", "formatDay", "formatMonth", "formatYear", "formatDayHeader", "formatDayTitle", "formatMonthTitle", "startingDay", "yearRange", "customClass", "dateDisabled", "dayDisabled", "onlyCurrentMonth", "shortcutPropagation", "monthColLimit", "yearColLimit", "update", "selectionDone", "activeDateChange"];
const _c1 = ["tabindex", "0"];
export const DATEPICKER_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    /* tslint:disable-next-line: no-use-before-declare */
    useExisting: forwardRef((/**
     * @return {?}
     */
    () => DatePickerComponent)),
    multi: true
};
/* tslint:disable:component-selector-name component-selector-type */
/* tslint:enable:component-selector-name component-selector-type */
export class DatePickerComponent {
    /**
     * @param {?} config
     */
    constructor(config) {
        /**
         * sets datepicker mode, supports: `day`, `month`, `year`
         */
        this.datepickerMode = 'day';
        /**
         * if false week numbers will be hidden
         */
        this.showWeeks = true;
        this.selectionDone = new EventEmitter(undefined);
        /**
         * callback to invoke when the activeDate is changed.
         */
        this.activeDateChange = new EventEmitter(undefined);
        /* tslint:disable-next-line: no-any*/
        this.onChange = Function.prototype;
        /* tslint:disable-next-line: no-any*/
        this.onTouched = Function.prototype;
        this._now = new Date();
        this.config = config;
        this.configureOptions();
    }
    /**
     * currently active date
     * @return {?}
     */
    get activeDate() {
        return this._activeDate || this._now;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set activeDate(value) {
        this._activeDate = value;
    }
    /**
     * @return {?}
     */
    configureOptions() {
        Object.assign(this, this.config);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onUpdate(event) {
        this.activeDate = event;
        this.onChange(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onSelectionDone(event) {
        this.selectionDone.emit(event);
    }
    /**
     * @param {?} event
     * @return {?}
     */
    onActiveDateChange(event) {
        this.activeDateChange.emit(event);
    }
    // todo: support null value
    /* tslint:disable-next-line: no-any*/
    /**
     * @param {?} value
     * @return {?}
     */
    writeValue(value) {
        if (this._datePicker.compare(value, this._activeDate) === 0) {
            return;
        }
        if (value && value instanceof Date) {
            this.activeDate = value;
            this._datePicker.select(value, false);
            return;
        }
        this.activeDate = value ? new Date(value) : void 0;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnChange(fn) {
        this.onChange = fn;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
}
DatePickerComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: DatePickerComponent, selectors: [["datepicker"]], factory: function DatePickerComponent_Factory(t) { return new (t || DatePickerComponent)(ɵngcc0.ɵɵdirectiveInject(DatepickerConfig)); }, viewQuery: function DatePickerComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(DatePickerInnerComponent, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadViewQuery()) && (ctx._datePicker = _t.first);
    } }, inputs: { datepickerMode: "datepickerMode", showWeeks: "showWeeks", activeDate: "activeDate", initDate: "initDate", minDate: "minDate", maxDate: "maxDate", minMode: "minMode", maxMode: "maxMode", formatDay: "formatDay", formatMonth: "formatMonth", formatYear: "formatYear", formatDayHeader: "formatDayHeader", formatDayTitle: "formatDayTitle", formatMonthTitle: "formatMonthTitle", startingDay: "startingDay", yearRange: "yearRange", onlyCurrentMonth: "onlyCurrentMonth", shortcutPropagation: "shortcutPropagation", monthColLimit: "monthColLimit", yearColLimit: "yearColLimit", customClass: "customClass", dateDisabled: "dateDisabled", dayDisabled: "dayDisabled" }, outputs: { selectionDone: "selectionDone", activeDateChange: "activeDateChange" }, features: [ɵngcc0.ɵɵProvidersFeature([DATEPICKER_CONTROL_VALUE_ACCESSOR])], consts: 4, vars: 24, template: function DatePickerComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "datepicker-inner", _c0);
        ɵngcc0.ɵɵlistener("update", function DatePickerComponent_Template_datepicker_inner_update_0_listener($event) { return ctx.onUpdate($event); });
        ɵngcc0.ɵɵlistener("selectionDone", function DatePickerComponent_Template_datepicker_inner_selectionDone_0_listener($event) { return ctx.onSelectionDone($event); });
        ɵngcc0.ɵɵlistener("activeDateChange", function DatePickerComponent_Template_datepicker_inner_activeDateChange_0_listener($event) { return ctx.onActiveDateChange($event); });
        ɵngcc0.ɵɵelement(1, "daypicker", _c1);
        ɵngcc0.ɵɵelement(2, "monthpicker", _c1);
        ɵngcc0.ɵɵelement(3, "yearpicker", _c1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("activeDate", ctx.activeDate)("locale", ctx.config.locale)("datepickerMode", ctx.datepickerMode)("initDate", ctx.initDate)("minDate", ctx.minDate)("maxDate", ctx.maxDate)("minMode", ctx.minMode)("maxMode", ctx.maxMode)("showWeeks", ctx.showWeeks)("formatDay", ctx.formatDay)("formatMonth", ctx.formatMonth)("formatYear", ctx.formatYear)("formatDayHeader", ctx.formatDayHeader)("formatDayTitle", ctx.formatDayTitle)("formatMonthTitle", ctx.formatMonthTitle)("startingDay", ctx.startingDay)("yearRange", ctx.yearRange)("customClass", ctx.customClass)("dateDisabled", ctx.dateDisabled)("dayDisabled", ctx.dayDisabled)("onlyCurrentMonth", ctx.onlyCurrentMonth)("shortcutPropagation", ctx.shortcutPropagation)("monthColLimit", ctx.monthColLimit)("yearColLimit", ctx.yearColLimit);
    } }, directives: [ɵngcc1.DatePickerInnerComponent, ɵngcc2.DayPickerComponent, ɵngcc3.MonthPickerComponent, ɵngcc4.YearPickerComponent], encapsulation: 2 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(DatePickerComponent, [{
        type: Component,
        args: [{
                selector: 'datepicker',
                template: `
    <datepicker-inner [activeDate]="activeDate"
                      (update)="onUpdate($event)"
                      [locale]="config.locale"
                      [datepickerMode]="datepickerMode"
                      [initDate]="initDate"
                      [minDate]="minDate"
                      [maxDate]="maxDate"
                      [minMode]="minMode"
                      [maxMode]="maxMode"
                      [showWeeks]="showWeeks"
                      [formatDay]="formatDay"
                      [formatMonth]="formatMonth"
                      [formatYear]="formatYear"
                      [formatDayHeader]="formatDayHeader"
                      [formatDayTitle]="formatDayTitle"
                      [formatMonthTitle]="formatMonthTitle"
                      [startingDay]="startingDay"
                      [yearRange]="yearRange"
                      [customClass]="customClass"
                      [dateDisabled]="dateDisabled"
                      [dayDisabled]="dayDisabled"
                      [onlyCurrentMonth]="onlyCurrentMonth"
                      [shortcutPropagation]="shortcutPropagation"
                      [monthColLimit]="monthColLimit"
                      [yearColLimit]="yearColLimit"
                      (selectionDone)="onSelectionDone($event)"
                      (activeDateChange)="onActiveDateChange($event)">
      <daypicker tabindex="0"></daypicker>
      <monthpicker tabindex="0"></monthpicker>
      <yearpicker tabindex="0"></yearpicker>
    </datepicker-inner>
    `,
                providers: [DATEPICKER_CONTROL_VALUE_ACCESSOR]
            }]
    }], function () { return [{ type: DatepickerConfig }]; }, { constructor: [], datepickerMode: [{
            type: Input
        }], showWeeks: [{
            type: Input
        }], selectionDone: [{
            type: Output
        }], activeDateChange: [{
            type: Output
        }], onChange: [], onTouched: [], _now: [], config: [], activeDate: [{
            type: Input
        }], activeDate: [], _activeDate: [], configureOptions: [], onUpdate: [], onSelectionDone: [], onActiveDateChange: [], writeValue: [], registerOnChange: [], registerOnTouched: [], initDate: [{
            type: Input
        }], minDate: [{
            type: Input
        }], maxDate: [{
            type: Input
        }], minMode: [{
            type: Input
        }], maxMode: [{
            type: Input
        }], formatDay: [{
            type: Input
        }], formatMonth: [{
            type: Input
        }], formatYear: [{
            type: Input
        }], formatDayHeader: [{
            type: Input
        }], formatDayTitle: [{
            type: Input
        }], formatMonthTitle: [{
            type: Input
        }], startingDay: [{
            type: Input
        }], yearRange: [{
            type: Input
        }], onlyCurrentMonth: [{
            type: Input
        }], shortcutPropagation: [{
            type: Input
        }], monthColLimit: [{
            type: Input
        }], yearColLimit: [{
            type: Input
        }], customClass: [{
            type: Input
        }], dateDisabled: [{
            type: Input
        }], dayDisabled: [{
            type: Input
        }], _datePicker: [{
            type: ViewChild,
            args: [DatePickerInnerComponent, { static: true }]
        }] });
/** @nocollapse */
DatePickerComponent.ctorParameters = () => [
    { type: DatepickerConfig }
];
DatePickerComponent.propDecorators = {
    datepickerMode: [{ type: Input }],
    initDate: [{ type: Input }],
    minDate: [{ type: Input }],
    maxDate: [{ type: Input }],
    minMode: [{ type: Input }],
    maxMode: [{ type: Input }],
    showWeeks: [{ type: Input }],
    formatDay: [{ type: Input }],
    formatMonth: [{ type: Input }],
    formatYear: [{ type: Input }],
    formatDayHeader: [{ type: Input }],
    formatDayTitle: [{ type: Input }],
    formatMonthTitle: [{ type: Input }],
    startingDay: [{ type: Input }],
    yearRange: [{ type: Input }],
    onlyCurrentMonth: [{ type: Input }],
    shortcutPropagation: [{ type: Input }],
    monthColLimit: [{ type: Input }],
    yearColLimit: [{ type: Input }],
    customClass: [{ type: Input }],
    dateDisabled: [{ type: Input }],
    dayDisabled: [{ type: Input }],
    activeDate: [{ type: Input }],
    selectionDone: [{ type: Output }],
    activeDateChange: [{ type: Output }],
    _datePicker: [{ type: ViewChild, args: [DatePickerInnerComponent, { static: true },] }]
};
if (false) {
    /**
     * sets datepicker mode, supports: `day`, `month`, `year`
     * @type {?}
     */
    DatePickerComponent.prototype.datepickerMode;
    /**
     * default date to show if `ng-model` value is not specified
     * @type {?}
     */
    DatePickerComponent.prototype.initDate;
    /**
     * oldest selectable date
     * @type {?}
     */
    DatePickerComponent.prototype.minDate;
    /**
     * latest selectable date
     * @type {?}
     */
    DatePickerComponent.prototype.maxDate;
    /**
     * set lower datepicker mode, supports: `day`, `month`, `year`
     * @type {?}
     */
    DatePickerComponent.prototype.minMode;
    /**
     * sets upper datepicker mode, supports: `day`, `month`, `year`
     * @type {?}
     */
    DatePickerComponent.prototype.maxMode;
    /**
     * if false week numbers will be hidden
     * @type {?}
     */
    DatePickerComponent.prototype.showWeeks;
    /**
     * format of day in month
     * @type {?}
     */
    DatePickerComponent.prototype.formatDay;
    /**
     * format of month in year
     * @type {?}
     */
    DatePickerComponent.prototype.formatMonth;
    /**
     * format of year in year range
     * @type {?}
     */
    DatePickerComponent.prototype.formatYear;
    /**
     * format of day in week header
     * @type {?}
     */
    DatePickerComponent.prototype.formatDayHeader;
    /**
     * format of title when selecting day
     * @type {?}
     */
    DatePickerComponent.prototype.formatDayTitle;
    /**
     * format of title when selecting month
     * @type {?}
     */
    DatePickerComponent.prototype.formatMonthTitle;
    /**
     * starting day of the week from 0-6 (0=Sunday, ..., 6=Saturday)
     * @type {?}
     */
    DatePickerComponent.prototype.startingDay;
    /**
     * number of years displayed in year selection
     * @type {?}
     */
    DatePickerComponent.prototype.yearRange;
    /**
     * if true only dates from the currently displayed month will be shown
     * @type {?}
     */
    DatePickerComponent.prototype.onlyCurrentMonth;
    /**
     * if true shortcut`s event propagation will be disabled
     * @type {?}
     */
    DatePickerComponent.prototype.shortcutPropagation;
    /**
     * number of months displayed in a single row of month picker
     * @type {?}
     */
    DatePickerComponent.prototype.monthColLimit;
    /**
     * number of years displayed in a single row of year picker
     * @type {?}
     */
    DatePickerComponent.prototype.yearColLimit;
    /**
     * array of custom css classes to be applied to targeted dates
     * @type {?}
     */
    DatePickerComponent.prototype.customClass;
    /**
     * array of disabled dates
     * @type {?}
     */
    DatePickerComponent.prototype.dateDisabled;
    /**
     * disabled days of the week from 0-6 (0=Sunday, ..., 6=Saturday)
     * @type {?}
     */
    DatePickerComponent.prototype.dayDisabled;
    /** @type {?} */
    DatePickerComponent.prototype.selectionDone;
    /**
     * callback to invoke when the activeDate is changed.
     * @type {?}
     */
    DatePickerComponent.prototype.activeDateChange;
    /** @type {?} */
    DatePickerComponent.prototype._datePicker;
    /** @type {?} */
    DatePickerComponent.prototype.onChange;
    /** @type {?} */
    DatePickerComponent.prototype.onTouched;
    /** @type {?} */
    DatePickerComponent.prototype.config;
    /**
     * @type {?}
     * @protected
     */
    DatePickerComponent.prototype._now;
    /**
     * @type {?}
     * @protected
     */
    DatePickerComponent.prototype._activeDate;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L1VzZXJzL2Fhcm9uL09uZURyaXZlL0Rlc2t0b3AvQW5ndWxhci0wNi0yMDIyLTIvQmFrZXJ5IFNob3AvYW5ndWxhci1iYWtlcnlzaG9wL25vZGVfbW9kdWxlcy9uZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXIvZXNtMjAxNS9kYXRlcGlja2VyLmNvbXBvbmVudC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFTQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztDQThHQyxhQXVDQyIsImZpbGUiOiJkYXRlcGlja2VyLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGZpbGVvdmVydmlldyBhZGRlZCBieSB0c2lja2xlXG4gKiBAc3VwcHJlc3Mge2NoZWNrVHlwZXMsZXh0cmFSZXF1aXJlLG1pc3NpbmdPdmVycmlkZSxtaXNzaW5nUmV0dXJuLHVudXNlZFByaXZhdGVNZW1iZXJzLHVzZWxlc3NDb2RlfSBjaGVja2VkIGJ5IHRzY1xuICovXG5pbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgZm9yd2FyZFJlZiwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOR19WQUxVRV9BQ0NFU1NPUiB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IERhdGVQaWNrZXJJbm5lckNvbXBvbmVudCB9IGZyb20gJy4vZGF0ZXBpY2tlci1pbm5lci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0ZXBpY2tlckNvbmZpZyB9IGZyb20gJy4vZGF0ZXBpY2tlci5jb25maWcnO1xuLyoqIEB0eXBlIHs/fSAqL1xuZXhwb3J0IGNvbnN0IERBVEVQSUNLRVJfQ09OVFJPTF9WQUxVRV9BQ0NFU1NPUiA9IHtcbiAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcbiAgICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLXVzZS1iZWZvcmUtZGVjbGFyZSAqL1xuICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgvKipcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgICgpID0+IERhdGVQaWNrZXJDb21wb25lbnQpKSxcbiAgICBtdWx0aTogdHJ1ZVxufTtcbi8qIHRzbGludDpkaXNhYmxlOmNvbXBvbmVudC1zZWxlY3Rvci1uYW1lIGNvbXBvbmVudC1zZWxlY3Rvci10eXBlICovXG4vKiB0c2xpbnQ6ZW5hYmxlOmNvbXBvbmVudC1zZWxlY3Rvci1uYW1lIGNvbXBvbmVudC1zZWxlY3Rvci10eXBlICovXG5leHBvcnQgY2xhc3MgRGF0ZVBpY2tlckNvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBjb25maWdcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIHNldHMgZGF0ZXBpY2tlciBtb2RlLCBzdXBwb3J0czogYGRheWAsIGBtb250aGAsIGB5ZWFyYFxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5kYXRlcGlja2VyTW9kZSA9ICdkYXknO1xuICAgICAgICAvKipcbiAgICAgICAgICogaWYgZmFsc2Ugd2VlayBudW1iZXJzIHdpbGwgYmUgaGlkZGVuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLnNob3dXZWVrcyA9IHRydWU7XG4gICAgICAgIHRoaXMuc2VsZWN0aW9uRG9uZSA9IG5ldyBFdmVudEVtaXR0ZXIodW5kZWZpbmVkKTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGNhbGxiYWNrIHRvIGludm9rZSB3aGVuIHRoZSBhY3RpdmVEYXRlIGlzIGNoYW5nZWQuXG4gICAgICAgICAqL1xuICAgICAgICB0aGlzLmFjdGl2ZURhdGVDaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyKHVuZGVmaW5lZCk7XG4gICAgICAgIC8qIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tYW55Ki9cbiAgICAgICAgdGhpcy5vbkNoYW5nZSA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbiAgICAgICAgLyogdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOiBuby1hbnkqL1xuICAgICAgICB0aGlzLm9uVG91Y2hlZCA9IEZ1bmN0aW9uLnByb3RvdHlwZTtcbiAgICAgICAgdGhpcy5fbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gICAgICAgIHRoaXMuY29uZmlndXJlT3B0aW9ucygpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBjdXJyZW50bHkgYWN0aXZlIGRhdGVcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIGdldCBhY3RpdmVEYXRlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlRGF0ZSB8fCB0aGlzLl9ub3c7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gdmFsdWVcbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIHNldCBhY3RpdmVEYXRlKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZURhdGUgPSB2YWx1ZTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBjb25maWd1cmVPcHRpb25zKCkge1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMsIHRoaXMuY29uZmlnKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBldmVudFxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgb25VcGRhdGUoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5hY3RpdmVEYXRlID0gZXZlbnQ7XG4gICAgICAgIHRoaXMub25DaGFuZ2UoZXZlbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IGV2ZW50XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBvblNlbGVjdGlvbkRvbmUoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5zZWxlY3Rpb25Eb25lLmVtaXQoZXZlbnQpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gez99IGV2ZW50XG4gICAgICogQHJldHVybiB7P31cbiAgICAgKi9cbiAgICBvbkFjdGl2ZURhdGVDaGFuZ2UoZXZlbnQpIHtcbiAgICAgICAgdGhpcy5hY3RpdmVEYXRlQ2hhbmdlLmVtaXQoZXZlbnQpO1xuICAgIH1cbiAgICAvLyB0b2RvOiBzdXBwb3J0IG51bGwgdmFsdWVcbiAgICAvKiB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWFueSovXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSB2YWx1ZVxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZSkge1xuICAgICAgICBpZiAodGhpcy5fZGF0ZVBpY2tlci5jb21wYXJlKHZhbHVlLCB0aGlzLl9hY3RpdmVEYXRlKSA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZSAmJiB2YWx1ZSBpbnN0YW5jZW9mIERhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlRGF0ZSA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5fZGF0ZVBpY2tlci5zZWxlY3QodmFsdWUsIGZhbHNlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmFjdGl2ZURhdGUgPSB2YWx1ZSA/IG5ldyBEYXRlKHZhbHVlKSA6IHZvaWQgMDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIHs/fSBmblxuICAgICAqIEByZXR1cm4gez99XG4gICAgICovXG4gICAgcmVnaXN0ZXJPbkNoYW5nZShmbikge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlID0gZm47XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7P30gZm5cbiAgICAgKiBAcmV0dXJuIHs/fVxuICAgICAqL1xuICAgIHJlZ2lzdGVyT25Ub3VjaGVkKGZuKSB7XG4gICAgICAgIHRoaXMub25Ub3VjaGVkID0gZm47XG4gICAgfVxufVxuRGF0ZVBpY2tlckNvbXBvbmVudC5kZWNvcmF0b3JzID0gW1xuICAgIHsgdHlwZTogQ29tcG9uZW50LCBhcmdzOiBbe1xuICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAnZGF0ZXBpY2tlcicsXG4gICAgICAgICAgICAgICAgdGVtcGxhdGU6IGBcbiAgICA8ZGF0ZXBpY2tlci1pbm5lciBbYWN0aXZlRGF0ZV09XCJhY3RpdmVEYXRlXCJcbiAgICAgICAgICAgICAgICAgICAgICAodXBkYXRlKT1cIm9uVXBkYXRlKCRldmVudClcIlxuICAgICAgICAgICAgICAgICAgICAgIFtsb2NhbGVdPVwiY29uZmlnLmxvY2FsZVwiXG4gICAgICAgICAgICAgICAgICAgICAgW2RhdGVwaWNrZXJNb2RlXT1cImRhdGVwaWNrZXJNb2RlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbaW5pdERhdGVdPVwiaW5pdERhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgIFttaW5EYXRlXT1cIm1pbkRhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgIFttYXhEYXRlXT1cIm1heERhdGVcIlxuICAgICAgICAgICAgICAgICAgICAgIFttaW5Nb2RlXT1cIm1pbk1vZGVcIlxuICAgICAgICAgICAgICAgICAgICAgIFttYXhNb2RlXT1cIm1heE1vZGVcIlxuICAgICAgICAgICAgICAgICAgICAgIFtzaG93V2Vla3NdPVwic2hvd1dlZWtzXCJcbiAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0RGF5XT1cImZvcm1hdERheVwiXG4gICAgICAgICAgICAgICAgICAgICAgW2Zvcm1hdE1vbnRoXT1cImZvcm1hdE1vbnRoXCJcbiAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0WWVhcl09XCJmb3JtYXRZZWFyXCJcbiAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0RGF5SGVhZGVyXT1cImZvcm1hdERheUhlYWRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgW2Zvcm1hdERheVRpdGxlXT1cImZvcm1hdERheVRpdGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbZm9ybWF0TW9udGhUaXRsZV09XCJmb3JtYXRNb250aFRpdGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbc3RhcnRpbmdEYXldPVwic3RhcnRpbmdEYXlcIlxuICAgICAgICAgICAgICAgICAgICAgIFt5ZWFyUmFuZ2VdPVwieWVhclJhbmdlXCJcbiAgICAgICAgICAgICAgICAgICAgICBbY3VzdG9tQ2xhc3NdPVwiY3VzdG9tQ2xhc3NcIlxuICAgICAgICAgICAgICAgICAgICAgIFtkYXRlRGlzYWJsZWRdPVwiZGF0ZURpc2FibGVkXCJcbiAgICAgICAgICAgICAgICAgICAgICBbZGF5RGlzYWJsZWRdPVwiZGF5RGlzYWJsZWRcIlxuICAgICAgICAgICAgICAgICAgICAgIFtvbmx5Q3VycmVudE1vbnRoXT1cIm9ubHlDdXJyZW50TW9udGhcIlxuICAgICAgICAgICAgICAgICAgICAgIFtzaG9ydGN1dFByb3BhZ2F0aW9uXT1cInNob3J0Y3V0UHJvcGFnYXRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgIFttb250aENvbExpbWl0XT1cIm1vbnRoQ29sTGltaXRcIlxuICAgICAgICAgICAgICAgICAgICAgIFt5ZWFyQ29sTGltaXRdPVwieWVhckNvbExpbWl0XCJcbiAgICAgICAgICAgICAgICAgICAgICAoc2VsZWN0aW9uRG9uZSk9XCJvblNlbGVjdGlvbkRvbmUoJGV2ZW50KVwiXG4gICAgICAgICAgICAgICAgICAgICAgKGFjdGl2ZURhdGVDaGFuZ2UpPVwib25BY3RpdmVEYXRlQ2hhbmdlKCRldmVudClcIj5cbiAgICAgIDxkYXlwaWNrZXIgdGFiaW5kZXg9XCIwXCI+PC9kYXlwaWNrZXI+XG4gICAgICA8bW9udGhwaWNrZXIgdGFiaW5kZXg9XCIwXCI+PC9tb250aHBpY2tlcj5cbiAgICAgIDx5ZWFycGlja2VyIHRhYmluZGV4PVwiMFwiPjwveWVhcnBpY2tlcj5cbiAgICA8L2RhdGVwaWNrZXItaW5uZXI+XG4gICAgYCxcbiAgICAgICAgICAgICAgICBwcm92aWRlcnM6IFtEQVRFUElDS0VSX0NPTlRST0xfVkFMVUVfQUNDRVNTT1JdXG4gICAgICAgICAgICB9XSB9XG5dO1xuLyoqIEBub2NvbGxhcHNlICovXG5EYXRlUGlja2VyQ29tcG9uZW50LmN0b3JQYXJhbWV0ZXJzID0gKCkgPT4gW1xuICAgIHsgdHlwZTogRGF0ZXBpY2tlckNvbmZpZyB9XG5dO1xuRGF0ZVBpY2tlckNvbXBvbmVudC5wcm9wRGVjb3JhdG9ycyA9IHtcbiAgICBkYXRlcGlja2VyTW9kZTogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgaW5pdERhdGU6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIG1pbkRhdGU6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIG1heERhdGU6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIG1pbk1vZGU6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIG1heE1vZGU6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIHNob3dXZWVrczogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZm9ybWF0RGF5OiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBmb3JtYXRNb250aDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZm9ybWF0WWVhcjogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZm9ybWF0RGF5SGVhZGVyOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBmb3JtYXREYXlUaXRsZTogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZm9ybWF0TW9udGhUaXRsZTogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgc3RhcnRpbmdEYXk6IFt7IHR5cGU6IElucHV0IH1dLFxuICAgIHllYXJSYW5nZTogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgb25seUN1cnJlbnRNb250aDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgc2hvcnRjdXRQcm9wYWdhdGlvbjogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgbW9udGhDb2xMaW1pdDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgeWVhckNvbExpbWl0OiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBjdXN0b21DbGFzczogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgZGF0ZURpc2FibGVkOiBbeyB0eXBlOiBJbnB1dCB9XSxcbiAgICBkYXlEaXNhYmxlZDogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgYWN0aXZlRGF0ZTogW3sgdHlwZTogSW5wdXQgfV0sXG4gICAgc2VsZWN0aW9uRG9uZTogW3sgdHlwZTogT3V0cHV0IH1dLFxuICAgIGFjdGl2ZURhdGVDaGFuZ2U6IFt7IHR5cGU6IE91dHB1dCB9XSxcbiAgICBfZGF0ZVBpY2tlcjogW3sgdHlwZTogVmlld0NoaWxkLCBhcmdzOiBbRGF0ZVBpY2tlcklubmVyQ29tcG9uZW50LCB7IHN0YXRpYzogdHJ1ZSB9LF0gfV1cbn07XG5pZiAoZmFsc2UpIHtcbiAgICAvKipcbiAgICAgKiBzZXRzIGRhdGVwaWNrZXIgbW9kZSwgc3VwcG9ydHM6IGBkYXlgLCBgbW9udGhgLCBgeWVhcmBcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5kYXRlcGlja2VyTW9kZTtcbiAgICAvKipcbiAgICAgKiBkZWZhdWx0IGRhdGUgdG8gc2hvdyBpZiBgbmctbW9kZWxgIHZhbHVlIGlzIG5vdCBzcGVjaWZpZWRcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5pbml0RGF0ZTtcbiAgICAvKipcbiAgICAgKiBvbGRlc3Qgc2VsZWN0YWJsZSBkYXRlXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUubWluRGF0ZTtcbiAgICAvKipcbiAgICAgKiBsYXRlc3Qgc2VsZWN0YWJsZSBkYXRlXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUubWF4RGF0ZTtcbiAgICAvKipcbiAgICAgKiBzZXQgbG93ZXIgZGF0ZXBpY2tlciBtb2RlLCBzdXBwb3J0czogYGRheWAsIGBtb250aGAsIGB5ZWFyYFxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLm1pbk1vZGU7XG4gICAgLyoqXG4gICAgICogc2V0cyB1cHBlciBkYXRlcGlja2VyIG1vZGUsIHN1cHBvcnRzOiBgZGF5YCwgYG1vbnRoYCwgYHllYXJgXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUubWF4TW9kZTtcbiAgICAvKipcbiAgICAgKiBpZiBmYWxzZSB3ZWVrIG51bWJlcnMgd2lsbCBiZSBoaWRkZW5cbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5zaG93V2Vla3M7XG4gICAgLyoqXG4gICAgICogZm9ybWF0IG9mIGRheSBpbiBtb250aFxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLmZvcm1hdERheTtcbiAgICAvKipcbiAgICAgKiBmb3JtYXQgb2YgbW9udGggaW4geWVhclxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLmZvcm1hdE1vbnRoO1xuICAgIC8qKlxuICAgICAqIGZvcm1hdCBvZiB5ZWFyIGluIHllYXIgcmFuZ2VcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5mb3JtYXRZZWFyO1xuICAgIC8qKlxuICAgICAqIGZvcm1hdCBvZiBkYXkgaW4gd2VlayBoZWFkZXJcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5mb3JtYXREYXlIZWFkZXI7XG4gICAgLyoqXG4gICAgICogZm9ybWF0IG9mIHRpdGxlIHdoZW4gc2VsZWN0aW5nIGRheVxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLmZvcm1hdERheVRpdGxlO1xuICAgIC8qKlxuICAgICAqIGZvcm1hdCBvZiB0aXRsZSB3aGVuIHNlbGVjdGluZyBtb250aFxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLmZvcm1hdE1vbnRoVGl0bGU7XG4gICAgLyoqXG4gICAgICogc3RhcnRpbmcgZGF5IG9mIHRoZSB3ZWVrIGZyb20gMC02ICgwPVN1bmRheSwgLi4uLCA2PVNhdHVyZGF5KVxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLnN0YXJ0aW5nRGF5O1xuICAgIC8qKlxuICAgICAqIG51bWJlciBvZiB5ZWFycyBkaXNwbGF5ZWQgaW4geWVhciBzZWxlY3Rpb25cbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS55ZWFyUmFuZ2U7XG4gICAgLyoqXG4gICAgICogaWYgdHJ1ZSBvbmx5IGRhdGVzIGZyb20gdGhlIGN1cnJlbnRseSBkaXNwbGF5ZWQgbW9udGggd2lsbCBiZSBzaG93blxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLm9ubHlDdXJyZW50TW9udGg7XG4gICAgLyoqXG4gICAgICogaWYgdHJ1ZSBzaG9ydGN1dGBzIGV2ZW50IHByb3BhZ2F0aW9uIHdpbGwgYmUgZGlzYWJsZWRcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5zaG9ydGN1dFByb3BhZ2F0aW9uO1xuICAgIC8qKlxuICAgICAqIG51bWJlciBvZiBtb250aHMgZGlzcGxheWVkIGluIGEgc2luZ2xlIHJvdyBvZiBtb250aCBwaWNrZXJcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5tb250aENvbExpbWl0O1xuICAgIC8qKlxuICAgICAqIG51bWJlciBvZiB5ZWFycyBkaXNwbGF5ZWQgaW4gYSBzaW5nbGUgcm93IG9mIHllYXIgcGlja2VyXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUueWVhckNvbExpbWl0O1xuICAgIC8qKlxuICAgICAqIGFycmF5IG9mIGN1c3RvbSBjc3MgY2xhc3NlcyB0byBiZSBhcHBsaWVkIHRvIHRhcmdldGVkIGRhdGVzXG4gICAgICogQHR5cGUgez99XG4gICAgICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUuY3VzdG9tQ2xhc3M7XG4gICAgLyoqXG4gICAgICogYXJyYXkgb2YgZGlzYWJsZWQgZGF0ZXNcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5kYXRlRGlzYWJsZWQ7XG4gICAgLyoqXG4gICAgICogZGlzYWJsZWQgZGF5cyBvZiB0aGUgd2VlayBmcm9tIDAtNiAoMD1TdW5kYXksIC4uLiwgNj1TYXR1cmRheSlcbiAgICAgKiBAdHlwZSB7P31cbiAgICAgKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5kYXlEaXNhYmxlZDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUuc2VsZWN0aW9uRG9uZTtcbiAgICAvKipcbiAgICAgKiBjYWxsYmFjayB0byBpbnZva2Ugd2hlbiB0aGUgYWN0aXZlRGF0ZSBpcyBjaGFuZ2VkLlxuICAgICAqIEB0eXBlIHs/fVxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLmFjdGl2ZURhdGVDaGFuZ2U7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLl9kYXRlUGlja2VyO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5vbkNoYW5nZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgRGF0ZVBpY2tlckNvbXBvbmVudC5wcm90b3R5cGUub25Ub3VjaGVkO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBEYXRlUGlja2VyQ29tcG9uZW50LnByb3RvdHlwZS5jb25maWc7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLl9ub3c7XG4gICAgLyoqXG4gICAgICogQHR5cGUgez99XG4gICAgICogQHByb3RlY3RlZFxuICAgICAqL1xuICAgIERhdGVQaWNrZXJDb21wb25lbnQucHJvdG90eXBlLl9hY3RpdmVEYXRlO1xufVxuIl19